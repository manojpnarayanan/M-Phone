<!DOCTYPE HTML>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>Evara Dashboard - Coupons</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta property="og:title" content="">
    <meta property="og:type" content="">
    <meta property="og:url" content="">
    <meta property="og:image" content="">
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon" href="assets/imgs/theme/favicon.svg">
    <!-- Template CSS -->
    <link href="/assets/css/main.css" rel="stylesheet" type="text/css" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>

<body>
    <div class="screen-overlay"></div>
    <%- include('./partials/nav') %>
    <main class="main-wrap">
        <header class="main-header navbar">
            <div class="col-search">
                <!-- Search form removed as in the original template -->
            </div>
        </header>
        <section class="content-main">
            <div class="content-header">
                <div>
                    <h2 class="content-title card-title">Coupons</h2>
                    <p>Add, edit or block coupons</p>
                </div>
                <div>
                    <input id="couponSearch" type="text" placeholder="Search Coupons" class="form-control bg-white">
                </div>
            </div>
            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-4">
                            <form action="/admin/dashboard/coupons" method="post">
                                <div class="mb-3">
                                    <label for="coupon_name" class="form-label">Name</label>
                                    <input type="text" name="name" placeholder="Coupon Name" class="form-control" id="coupon_name" required />
                                </div>
                                <div class="mb-3">
                                    <label for="coupon_code" class="form-label">Code</label>
                                    <input type="text" name="code" placeholder="SUMMER20" class="form-control" id="coupon_code" required />
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Discount Type</label>
                                    <select name="discountType" class="form-select" required>
                                        <option value="percentage">Percentage</option>
                                        <option value="fixed">Fixed Amount</option>
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <label for="discount_value" class="form-label">Discount Value</label>
                                    <input type="number" name="discountValue" placeholder="10" class="form-control" id="discount_value" required />
                                </div>
                                <div class="mb-3">
                                    <label for="min_order" class="form-label">Minimum Order Amount</label>
                                    <input type="number" name="minOrderAmount" placeholder="100" class="form-control" id="min_order" required />
                                </div>
                                <div class="mb-3" id="maxDiscountContainer">
                                    <label for="max_discount" class="form-label">Maximum Discount Amount</label>
                                    <input type="number" name="maxDiscountAmount" placeholder="50" class="form-control" id="max_discount" />
                                </div>
                                <div class="row mb-3">
                                    <div class="col-md-6">
                                        <label for="valid_from" class="form-label">Valid From</label>
                                        <input type="date" name="validFrom" class="form-control" id="valid_from" required />
                                    </div>
                                    <div class="col-md-6">
                                        <label for="valid_until" class="form-label">Valid Until</label>
                                        <input type="date" name="validUntil" class="form-control" id="valid_until" required />
                                    </div>
                                </div>
                                <div class="mb-3">
                                    <label for="usage_limit" class="form-label">Usage Limit (0 for unlimited)</label>
                                    <input type="number" name="usageLimit" placeholder="0" class="form-control" id="usage_limit" />
                                </div>
                                <div class="d-grid">
                                    <button type="submit" class="btn btn-primary">Create Coupon</button>
                                </div>
                            </form>
                        </div>
                        <div class="col-md-8">
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th>Name</th>
                                            <!-- <th>Code</th> -->
                                            <th>Discount</th>
                                            <th>Valid From</th>
                                            <th>Valid Until</th>
                                            <th> min Price</th>
                                            <th>Status</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% if (typeof coupons !== 'undefined' && coupons.length > 0) { %>
                                            <% coupons.forEach(coupon => { %>
                                                <tr>
                                                    <td><%= coupon.name %></td>
                                                    <!-- <td><strong><%= coupon.code %></strong></td> -->
                                                    <td>
                                                        <% if (coupon.discountType === 'percentage') { %>
                                                            <%= coupon.discountValue %>% (Max: <%= coupon.maxDiscountAmount %>)
                                                        <% } else { %>
                                                            $<%= coupon.discountValue %> off
                                                        <% } %>
                                                    </td>
                                                    <td><%= new Date(coupon.validFrom).toLocaleDateString() %></td>
                                                    <td><%= new Date(coupon.validUntil).toLocaleDateString() %></td>
                                                    <td>
                                                        <%= coupon.minOrderAmount %>
                                                    </td>
                                                    <td>
                                                        <span class="badge <%= coupon.isActive ? 'bg-success' : 'bg-danger' %>">
                                                            <%= coupon.isActive ? 'Active' : 'Inactive' %>
                                                        </span>
                                                    </td>
                                                    <td>
                                                        <div class="d-flex gap-2">
                                                            <a href="/admin/dashboard/coupons/edit/<%= coupon._id %>" class="btn btn-sm btn-primary">Edit</a>
                                                            <button class="btn btn-sm <%= coupon.isActive ? 'btn-danger' : 'btn-success' %> toggle-coupon" 
                                                                data-id="<%= coupon._id %>">
                                                                <%= coupon.isActive ? 'Deactivate' : 'Activate' %>
                                                            </button>
                                                        </div>
                                                    </td>
                                                </tr>
                                            <% }); %>
                                        <% } else { %>
                                            <tr>
                                                <td colspan="7" class="text-center">No coupons found</td>
                                            </tr>
                                        <% } %>
                                    </tbody>
                                </table>
                            </div>
                            
                            <!-- Pagination Controls -->
                            <% if (typeof totalPages !== 'undefined' && totalPages > 1) { %>
                            <div class="pagination-container mt-4">
                                <nav aria-label="Page navigation">
                                    <ul class="pagination justify-content-center">
                                        <% for (let i = 1; i <= totalPages; i++) { %>
                                            <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                                                <a class="page-link" href="#" data-page="<%= i %>"><%= i %></a>
                                            </li>
                                        <% } %>
                                    </ul>
                                </nav>
                            </div>
                            <% } %>
                        </div> <!-- .col// -->
                    </div> <!-- .row // -->
                </div> <!-- card body .// -->
            </div> <!-- card .// -->
        </section> <!-- content-main end// -->
        <footer class="main-footer font-xs">
            <div class="row pb-30 pt-15">
                <div class="col-sm-6">
                    <script>
                    document.write(new Date().getFullYear())
                    </script> ©, Evara - HTML Ecommerce Template .
                </div>
                <div class="col-sm-6">
                    <div class="text-sm-end">
                        All rights reserved
                    </div>
                </div>
            </div>
        </footer>
    </main>
    <script src="/assets/js/vendors/jquery-3.6.0.min.js"></script>
    <script src="/assets/js/vendors/bootstrap.bundle.min.js"></script>
    <script src="/assets/js/vendors/select2.min.js"></script>
    <script src="/assets/js/vendors/perfect-scrollbar.js"></script>
    <script src="/assets/js/vendors/jquery.fullscreen.min.js"></script>
    <!-- Main Script -->
    <script src="/assets/js/main.js" type="text/javascript"></script>

    <script>
    document.addEventListener("DOMContentLoaded", function () {
        // Toggle coupon active status
        document.querySelectorAll(".toggle-coupon").forEach(button => {
            button.addEventListener("click", function () {
                const couponId = this.getAttribute("data-id");
                const action = this.textContent.trim();
                console.log(couponId)

                Swal.fire({
                    title: `Are you sure you want to ${action} this coupon?`,
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Yes, proceed!"
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch(`/admin/dashboard/coupons/toggle/${couponId}`, {
                            method: "POST",
                            headers: { "Content-Type": "application/json" }
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                // Update button text and class
                                this.textContent = data.isActive ? "Deactivate" : "Activate";
                                this.classList.toggle("btn-success", !data.isActive);
                                this.classList.toggle("btn-danger", data.isActive);

                                // Update status badge
                                const statusBadge = this.closest('tr').querySelector('.badge');
                                if (statusBadge) {
                                    statusBadge.textContent = data.isActive ? "Active" : "Inactive";
                                    statusBadge.classList.toggle('bg-success', data.isActive);
                                    statusBadge.classList.toggle('bg-danger', !data.isActive);
                                }

                                Swal.fire({
                                    icon: "success",
                                    title: `Coupon ${data.isActive ? "activated" : "deactivated"} successfully!`,
                                    timer: 2000,
                                    showConfirmButton: false
                                });
                            } else {
                                Swal.fire({
                                    icon: "error",
                                    title: "Failed to update coupon status",
                                });
                            }
                        })
                        .catch(error => {
                            console.error(error);
                            Swal.fire({
                                icon: "error",
                                title: "An error occurred!",
                            });
                        });
                    }
                });
            });
        });

        // Show/hide max discount amount field based on discount type
        const discountTypeSelect = document.querySelector('select[name="discountType"]');
        const maxDiscountContainer = document.getElementById('maxDiscountContainer');
        
        if (discountTypeSelect && maxDiscountContainer) {
            discountTypeSelect.addEventListener('change', function() {
                if (this.value === 'percentage') {
                    maxDiscountContainer.style.display = 'block';
                    document.getElementById('max_discount').setAttribute('required', 'required');
                } else {
                    maxDiscountContainer.style.display = 'none';
                    document.getElementById('max_discount').removeAttribute('required');
                }
            });
            
            // Trigger on page load
            if (discountTypeSelect.value === 'fixed') {
                maxDiscountContainer.style.display = 'none';
                document.getElementById('max_discount').removeAttribute('required');
            }
        }

        // Coupon search functionality
        const searchInput = document.getElementById("couponSearch");
        if (searchInput) {
            searchInput.addEventListener("keyup", function () {
                const searchTerm = searchInput.value.trim();

                fetch(`/admin/dashboard/coupons?search=${searchTerm}`)
                    .then(response => response.text())
                    .then(html => {
                        const parser = new DOMParser();
                        const doc = parser.parseFromString(html, "text/html");
                        const newTableBody = doc.querySelector("tbody");
                        if (newTableBody) {
                            document.querySelector("tbody").innerHTML = newTableBody.innerHTML;
                        }
                    })
                    .catch(error => {
                        console.error(error);
                        Swal.fire({
                            icon: "error",
                            title: "Failed to load search results",
                        });
                    });
            });
        }

        // Pagination functionality
        const paginationLinks = document.querySelectorAll(".pagination a");
        paginationLinks.forEach(link => {
            link.addEventListener("click", function (e) {
                e.preventDefault();
                const page = this.getAttribute("data-page");
                const searchTerm = document.getElementById("couponSearch").value.trim();

                fetch(`/admin/dashboard/coupons?page=${page}&search=${searchTerm}`)
                    .then(response => response.text())
                    .then(html => {
                        const parser = new DOMParser();
                        const doc = parser.parseFromString(html, "text/html");
                        const newTableBody = doc.querySelector("tbody");
                        if (newTableBody) {
                            document.querySelector("tbody").innerHTML = newTableBody.innerHTML;
                        }
                        
                        // Update pagination active state
                        document.querySelectorAll(".page-item").forEach(item => {
                            item.classList.remove("active");
                        });
                        this.closest(".page-item").classList.add("active");
                    })
                    .catch(error => console.error(error));
            });
        });
    

    // Add this to your existing script section

    // Get the coupon form
    const couponForm = document.querySelector('form[action="/admin/dashboard/coupons"]');
    console.log(couponForm)
    if (couponForm) {
        couponForm.addEventListener('submit', function (e) {
            e.preventDefault();
            
            // Show loading state
            Swal.fire({
                title: 'Creating coupon...',
                html: 'Please wait while we create your coupon',
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });
            
            // Collect form data
            const formData = new FormData(this);
            const formDataObj = {};
            formData.forEach((value, key) => {
                formDataObj[key] = value;
            });
            
            // Submit form using Fetch API
            fetch('/admin/dashboard/coupons', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(formDataObj)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: 'Coupon created successfully!',
                        showConfirmButton: true
                    }).then(() => {
                        // Reload the page to show the new coupon
                        window.location.reload();
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: data.message || 'Failed to create coupon',
                        showConfirmButton: true
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: 'An unexpected error occurred',
                    showConfirmButton: true
                });
            });
        });
    }
    
    // Keep your existing code for toggle-coupon, discount type, search, and pagination here
});
    </script>
</body>
</html>