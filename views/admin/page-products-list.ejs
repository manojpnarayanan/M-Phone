<!DOCTYPE HTML>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>Evara Dashboard</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta property="og:title" content="">
    <meta property="og:type" content="">
    <meta property="og:url" content="">
    <meta property="og:image" content="">
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon" href="assets/imgs/theme/favicon.svg">
    <!-- Template CSS -->
    <link href="/assets/css/main.css" rel="stylesheet" type="text/css" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

</head>

<body>
    <div class="screen-overlay"></div>
    <%- include('./partials/nav') %>
    <main class="main-wrap">
        <!-- <header class="main-header navbar">
            <div class="col-search">
                <form class="searchform">
                    <div class="input-group">
                        <input list="search_terms" type="text" class="form-control" placeholder="Search term">
                        <button class="btn btn-light bg" type="button"> <i class="material-icons md-search"></i></button>
                    </div>
                    <datalist id="search_terms">
                        <option value="Products">
                        <option value="New orders">
                        <option value="Apple iphone">
                        <option value="Ahmed Hassan">
                    </datalist>
                </form>
            </div>
            <div class="col-nav">
                <button class="btn btn-icon btn-mobile me-auto" data-trigger="#offcanvas_aside"> <i class="material-icons md-apps"></i> </button>
                <ul class="nav">
                    <li class="nav-item">
                        <a class="nav-link btn-icon" href="#">
                            <i class="material-icons md-notifications animation-shake"></i>
                            <span class="badge rounded-pill">3</span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link btn-icon darkmode" href="#"> <i class="material-icons md-nights_stay"></i> </a>
                    </li>
                    <li class="nav-item">
                        <a href="#" class="requestfullscreen nav-link btn-icon"><i class="material-icons md-cast"></i></a>
                    </li>
                    <li class="dropdown nav-item">
                        <a class="dropdown-toggle" data-bs-toggle="dropdown" href="#" id="dropdownLanguage" aria-expanded="false"><i class="material-icons md-public"></i></a>
                        <div class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownLanguage">
                            <a class="dropdown-item text-brand" href="#"><img src="/assets/imgs/theme/flag-us.png" alt="English">English</a>
                            <a class="dropdown-item" href="#"><img src="/assets/imgs/theme/flag-fr.png" alt="Français">Français</a>
                            <a class="dropdown-item" href="#"><img src="/assets/imgs/theme/flag-jp.png" alt="Français">日本語</a>
                            <a class="dropdown-item" href="#"><img src="/assets/imgs/theme/flag-cn.png" alt="Français">中国人</a>
                        </div>
                    </li>
                    <li class="dropdown nav-item">
                        <a class="dropdown-toggle" data-bs-toggle="dropdown" href="#" id="dropdownAccount" aria-expanded="false"> <img class="img-xs rounded-circle" src="assets/imgs/people/avatar2.jpg" alt="User"></a>
                        <div class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownAccount">
                            <a class="dropdown-item" href="#"><i class="material-icons md-perm_identity"></i>Edit Profile</a>
                            <a class="dropdown-item" href="#"><i class="material-icons md-settings"></i>Account Settings</a>
                            <a class="dropdown-item" href="#"><i class="material-icons md-account_balance_wallet"></i>Wallet</a>
                            <a class="dropdown-item" href="#"><i class="material-icons md-receipt"></i>Billing</a>
                            <a class="dropdown-item" href="#"><i class="material-icons md-help_outline"></i>Help center</a>
                            <div class="dropdown-divider"></div>
                            <a class="dropdown-item text-danger" href="#"><i class="material-icons md-exit_to_app"></i>Logout</a>
                        </div>
                    </li>
                </ul>
            </div>
        </header> -->
        <section class="content-main">
            <div class="content-header">
                <div>
                    <h2 class="content-title card-title">Products List</h2>
                    <!-- <p>Lorem ipsum dolor sit amet.</p> -->
                </div>
                <div>
                    <!-- <a href="#" class="btn btn-light rounded font-md">Export</a>
                    <a href="#" class="btn btn-light rounded  font-md">Import</a> -->
                    <a href="/admin/dashboard/products/addproduct" class="btn btn-primary btn-sm rounded">Add Product</a>
                </div>
            </div>
            <div class="card mb-4">
                <header class="card-header">
                    <div class="row align-items-center">
                        <div class="col col-check flex-grow-0">
                            <!-- <div class="form-check ms-2">
                                <input class="form-check-input" type="checkbox" value="">
                            </div> -->
                        </div>
                        <div>
                            <input id="productSearch" type="text" placeholder="Search Products" class="form-control bg-white">
                        </div>
                        <div class="col-md-3 col-12 me-auto mb-md-0 mb-3">
                            <!-- <select class="form-select">
                                <option selected>All category</option>
                                <option>Electronics</option>
                                <option>Clothes</option>
                                <option>Automobile</option>
                            </select> -->
                        </div>
                        <!-- <div class="col-md-2 col-6">
                            <input type="date" value="02.05.2022" class="form-control">
                        </div> -->
                        <div class="col-md-2 col-6">
                            <!-- <select class="form-select">
                                <option selected>Status</option>
                                <option>Active</option>
                                <option>Disabled</option>
                                <option>Show all</option>
                            </select> -->
                        </div>
                    </div>
                </header> <!-- card-header end// -->
                <div class="card-body">
                   
                
                   
                    <h2 class="mb-4">Product List</h2>

                    <table class="table table-bordered">
                        <thead class="table-light">
                            <tr>
                                <th scope="col">Select</th>
                                <th scope="col">Product</th>
                                <th scope="col">Price</th>
                                <th scope="col">Status</th>
                                <th scope="col">Date Added</th>
                                <th scope="col">status</th>
                                <th scope="col">Actions</th>
                                <th scope="col">Add Offer</th>

                            </tr>
                        </thead>
                        <tbody>
                            <% products.forEach(product => { %>
                                <tr>
                                    <td>
                                        <input class="form-check-input" type="checkbox">
                                    </td>
                                    <td>
                                        <a href="#" class="d-flex align-items-center">
                                            <img src="/<%= product.image[0] %>" class="img-sm img-thumbnail me-2" alt="Item">
                                            <span><%= product.name %></span>
                                        </a>
                                    </td>
                                    <td>$<%= product.price %></td>
                                    <td>
                                        <span class="badge rounded-pill alert-<%= product.isActive ? 'success' : 'warning' %>">
                                            <%= product.isActive ? "Active" : "Archived" %>
                                        </span>
                                    </td>
                                    <td><%= new Date(product.createdAt).toLocaleDateString() %></td>
                                    <td>
                                        <span class="badge rounded-pill alert-<%= product.discount ? 'success' : 'warning' %>">
                                            <%= product.discount ? product.discount : 0 %>%
                                        </span>
                                    </td>
                                    <td>
                                        <a href="/admin/dashboard/products/edit/<%= product._id %>" class="btn btn-sm font-sm rounded btn-brand">
                                            <i class="material-icons md-edit"></i> Edit
                                        </a>
                                        <button class="btn btn-sm font-sm <%= product.isActive ? 'btn-light' : 'btn-warning' %> rounded blockbtn" 
                                            data-product-id="<%= product._id %>">
                                            <i class="material-icons <%= product.isActive ? 'md-lock_open' : 'md-delete_forever' %>"></i>
                                            <%= product.isActive ? "Block" : "unblock" %>
                                        </button>
                                    </td>
                                    <td>
                                        <button class="btn <%= product.discount ? 'btn-danger': 'btn-success'  %> toggle-offer-btn"
                                            data-id="<%= product._id %>">
                                            <%= product.discount ?   'Remove':'Add' %>
                                        </button>

                                    </td>
                                    
                                </tr>
                            <% }) %>
                        </tbody>
                    </table>
                    

                    
                    
                           
                         
                        </div> <!-- row .// -->
                    </article> <!-- itemlist  .// -->
                </div> <!-- card-body end// -->
            </div> <!-- card end// -->

           
            <div class="pagination-area mt-30 mb-50">
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-start">
                        <% if(currentPage>1){%>
                        <li class="page-item" >
                            <a class="page-link" href="/admin/dashboard/productlist?page=<%= currentPage-1%>&search=<%=search %>">Previous</a> 
                        </li>
                    <%} %>
                    <% for(let i=1;i<=totalPages;i++){%>
                    <li class="page-item <%= i === currentPage? 'active': '' %>" >
                        <a class="page-link" href="/admin/dashboard/productlist?page=<%=i%>&search=<%=search%>"><%=i %></a>

                    </li>
                   <% } %>
                   <% if (currentPage<totalPages){%>
                   <li class="page-item" >
                      <a class="page-link" href="/admin/dashboard/productlist?page=<%=currentPage+1%>&search=<%=search%>">Next</a>
                   </li>    
                <% } %>
            </ul>
            </nav>
            </div>


            <!-- <div class="pagination-area mt-30 mb-50">
                <nav aria-label="Page navigation example">
                    <ul class="pagination justify-content-start">
                        <li class="page-item active"><a class="page-link" href="#">01</a></li>
                        <li class="page-item"><a class="page-link" href="#">02</a></li>
                        <li class="page-item"><a class="page-link" href="#">03</a></li>
                        <li class="page-item"><a class="page-link dot" href="#">...</a></li>
                        <li class="page-item"><a class="page-link" href="#">16</a></li>
                        <li class="page-item"><a class="page-link" href="#"><i class="material-icons md-chevron_right"></i></a></li>
                    </ul>
                </nav>
            </div> -->
        </section> <!-- content-main end// -->
        <footer class="main-footer font-xs">
            <div class="row pb-30 pt-15">
                <div class="col-sm-6">
                    <script>
                    document.write(new Date().getFullYear())
                    </script> ©, Evara - HTML Ecommerce Template .
                </div>
                <div class="col-sm-6">
                    <div class="text-sm-end">
                        All rights reserved
                    </div>
                </div>
            </div>
        </footer>
    </main>
    <script src="/assets/js/vendors/jquery-3.6.0.min.js"></script>
    <script src="/assets/js/vendors/bootstrap.bundle.min.js"></script>
    <script src="/assets/js/vendors/select2.min.js"></script>
    <script src="/assets/js/vendors/perfect-scrollbar.js"></script>
    <script src="/assets/js/vendors/jquery.fullscreen.min.js"></script>
    <!-- Main Script -->
    <script src="/assets/js/main.js" type="text/javascript"></script>
   
   
    


  
<script>

function attachProductActionListeners() {
    
    document.querySelectorAll(".toggle-offer-btn").forEach(button => {
        
        button.removeEventListener("click", handleOfferToggle);
        
        button.addEventListener("click", handleOfferToggle);
    });

    
    document.querySelectorAll(".blockbtn").forEach(button => {
        
        button.removeEventListener("click", handleBlockToggle);
        
        button.addEventListener("click", handleBlockToggle);
    });
}


function handleOfferToggle() {
    const productId = this.getAttribute("data-id");
    const isRemoveAction = this.textContent.trim() === 'Remove';
    console.log(productId);
    
    if (isRemoveAction) {
        
        Swal.fire({
            title: `Are you sure you want to remove the offer from this product?`,
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, remove it!"
        })
        .then((result) => {
            if (result.isConfirmed) {
                fetch(`/admin/dashboard/products/remove-offer/${productId}`, {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json"
                    }
                })
                .then(response => {
                    if (response.ok) {
                        return response.json();
                    }
                    throw new Error('Network response was not ok');
                })
                .then(data => {
                    
                    const offerBadge = this.closest('tr').querySelector('.badge[data-id]');
                    if (offerBadge) {
                        offerBadge.textContent = '0%';
                        offerBadge.classList.remove('bg-success');
                        offerBadge.classList.add('bg-danger');
                    }
                    
                    
                    this.textContent = 'Add';
                    this.classList.remove('btn-danger');
                    this.classList.add('btn-success');
                    
                    Swal.fire(
                        'Success!',
                        'Offer has been removed successfully.',
                        'success'
                    );
                    window.location.reload()
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire(
                        'Error!',
                        'Failed to remove offer.',
                        'error'
                    );
                });
            }
        });
    } else {
        // Handle Add Offer action
        Swal.fire({
            title: `Are you sure you want to add Offer to this product?`,
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, proceed!"
        })
        .then((result) => {
            if (result.isConfirmed) {
                // Show a second Swal modal to get the percentage input
                Swal.fire({
                    title: 'Enter Offer Percentage',
                    input: 'number',
                    inputLabel: 'Percentage',
                    inputPlaceholder: 'Enter percentage (e.g., 10)',
                    showCancelButton: true,
                    inputValidator: (value) => {
                        if (!value) {
                            return 'Please enter a percentage!';
                        }
                        if (value < 0 || value > 100) {
                            return 'Percentage must be between 0 and 100';
                        }
                    }
                })
                .then((offerValue) => {
                    if (offerValue.isConfirmed) {
                        const offerPercentage = offerValue.value;
                        fetch(`/admin/dashboard/products/add-offer/${productId}`, {
                            method: "PUT",
                            headers: {
                                "Content-Type": "application/json"
                            },
                            body: JSON.stringify({ offerPercentage })
                        })
                        .then(response => {
                            if (response.ok) {
                                return response.json();
                            }
                            throw new Error('Network response was not ok');
                        })
                        .then(data => {
                            // Update the offer badge to show the new percentage
                            const offerBadge = this.closest('tr').querySelector('.badge[data-id]');
                            if (offerBadge) {
                                offerBadge.textContent = `${offerPercentage}%`;
                                offerBadge.classList.remove('bg-danger');
                                offerBadge.classList.add('bg-success');
                            }
                            
                            // Update the button to "Remove"
                            this.textContent = 'Remove';
                            this.classList.remove('btn-success');
                            this.classList.add('btn-danger');
                            
                            Swal.fire({
                                title: 'Success!',
                                text: 'Offer has been added successfully.',
                                icon: 'success',
                                confirmButtonText: 'OK'
                            }).then(()=>{
                                window.location.reload();
                            });
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            Swal.fire(
                                'Error!',
                                'Failed to add offer.',
                                'error'
                            );
                        });
                    }
                });
            }
        });
    }
}

// Handler function for block/unblock
async function handleBlockToggle() {
    const productId = this.getAttribute("data-product-id");
    if (!productId) {
        Swal.fire({
            title: 'Error!',
            text: 'Product not found',
            icon: 'error',
            confirmButtonText: 'OK'
        });
        return;
    }

    // Get current status to determine what action is being taken
    const isCurrentlyActive = this.innerHTML.includes("Block");
    const action = isCurrentlyActive ? "block" : "unblock";

    // Show confirmation dialog
    Swal.fire({
        title: `Are you sure you want to ${action} this product?`,
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: `Yes, ${action} it!`
    }).then(async (result) => {
        if (result.isConfirmed) {
            try {
                const response = await fetch(`/admin/dashboard/productlist/${productId}`, {
                    method: "PATCH",
                    headers: {
                        "Content-Type": "application/json"
                    }
                });

                if (!response.ok) {
                    throw new Error("Something went wrong");
                }

                const data = await response.json();

                // Toggle button text, icon, and class dynamically
                if (data.isActive) {
                    this.innerHTML = '<i class="material-icons md-lock"></i> Block';
                    this.classList.remove("btn-light");
                    this.classList.add("btn-warning");
                } else {
                    this.innerHTML = '<i class="material-icons md-lock_open"></i> Unblock';
                    this.classList.remove("btn-warning");
                    this.classList.add("btn-light");
                }

                // Update product status badge
                const statusBadge = this.closest("tr").querySelector(".badge");
                if (statusBadge) {
                    statusBadge.textContent = data.isActive ? "Active" : "Archived";
                    statusBadge.classList.remove("alert-success", "alert-warning");
                    statusBadge.classList.add(data.isActive ? "alert-success" : "alert-warning");
                }

                // Show success message
                Swal.fire({
                    title: 'Success!',
                    text: `Product has been ${data.isActive ? 'unblocked' : 'blocked'} successfully.`,
                    icon: 'success',
                    confirmButtonText: 'OK'
                });

            } catch (error) {
                console.error(error);
                Swal.fire({
                    title: 'Error!',
                    text: 'Something went wrong',
                    icon: 'error',
                    confirmButtonText: 'OK'
                });
            }
        }
    });
}

document.addEventListener("DOMContentLoaded", function () {
    // Initial attachment of event listeners
    attachProductActionListeners();

    const searchProduct = document.getElementById("productSearch");
    if (searchProduct) {
        searchProduct.addEventListener("keyup", function() {
            const searchTerm = searchProduct.value.trim();

            fetch(`/admin/dashboard/productlist/?search=${searchTerm}`)
            .then(response => response.text())
            .then(html => {
                const parser = new DOMParser();
                const doc = parser.parseFromString(html, "text/html");
                const newTableBody = doc.querySelector("tbody");
                if (newTableBody) {
                    document.querySelector("tbody").innerHTML = newTableBody.innerHTML;
                    // Re-attach event listeners to the new elements
                    attachProductActionListeners();
                }
            })
            .catch(error => console.log(error));
        });
    }
});
</script>


</body>

</html>